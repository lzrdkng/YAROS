autogen definitions makefile;

/**************************************************************
 *                === IMPORTANT README ===                    *
 * Every paths have to be relative to the root of the project *
 **************************************************************/


/*********************************************************************
 * variables is a list of variable to put directly at the top of the *
 * makefile.  Every variable has a name and a value.                 *
 *********************************************************************/
variables =
{
     name  = "PACKAGE";
     value = "YAROS";
};

variables =
{
     name  = "PACKAGE_VERSION";
     value = "1.0.0";
};

/**************************************************************************
 * auto_generate is a list of file to generate from a definition and a    *
 * template.  Every entry should define the path of the definition in the *
 * *definition* variable, the path to the template to use with *template* *
 * and the directory to where the generate file is to be put with the     *
 * variable *dir*.  It's also necessary to provide a suffix and a base    *
 * name for your file with the corresponding variable.                    *
 **************************************************************************/
auto_generate =
{
     definition = "autogen/def/global.def";
     template   = "autogen/tpl/global.tpl";
     suffix     = "h";
     dir        = "include/kernel/";
     base_name  = "global";
};

auto_generate =
{
     definition = "autogen/def/global.def";
     template   = "autogen/tpl/global.tpl";
     suffix     = "c";
     dir        = "kernel/";
     base_name  = "global";
};

auto_generate =
{
     definition = "autogen/def/init.def";
     template   = "autogen/tpl/init.tpl";
     suffix     = "c";
     dir        = "init/";
     base_name  = "init";
};

/***********************************************************************
 * src_files is a list of files to compile.  Every files of the kernel *
 * are list here.  File for differents CPU are list in their own list. *
 * It's important to add your *.c file to the list whenever this file  *
 * is independant on the machine.                                      *
 ***********************************************************************/
src_files = "init/init.c";
src_files = "init/run.c";
src_files = "ipc/mutex.c";
src_files = "kernel/msg.c";
src_files = "kernel/panic.c";
src_files = "kernel/sched.c";
src_files = "kernel/task.c";
src_files = "kernel/global.c";

build_dirs = "build/devices/adc/";
build_dirs = "build/devices/clk/";
build_dirs = "build/devices/irq/";
build_dirs = "build/devices/twi/";
build_dirs = "build/devices/usart/";
build_dirs = "build/dvi/";
build_dirs = "build/html/";
build_dirs = "build/info/";
build_dirs = "build/init/";
build_dirs = "build/ipc/";
build_dirs = "build/kernel/";
build_dirs = "build/pdf/";
build_dirs = "build/ps/";

inc_dirs = "include/";

/* ARCH */

#ifdef atmega324pa
build_dirs = "build/arch/atmega/";
arch       = "arch/atmega/sysclk.c";
arch       = "devices/adc/atmega324pa.c";
arch       = "devices/clk/atmega324pa.c";
arch       = "devices/irq/atmega324pa.c";
arch       = "devices/twi/atmega324pa.c";
arch       = "devices/usart/atmega324pa.c";
#else
#error "Architecture not found or not supported!"
#endif
